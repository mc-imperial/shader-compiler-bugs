LINK_ERROR
Vertex info
-----------
0(2) : warning C7555: 'attribute' is deprecated, use 'in/out' instead

Fragment info
-------------
Internal error: assembly compile error for fragment shader at offset 5906:
-- error message --
line 309, column 7:  error: IF statement nested too deeply.
line 347, column 6:  error: ENDIF without matching IF.
-- internal assembly text --
!!NVfp5.0
OPTION NV_bindless_texture;
# cgc version 3.4.0001, build date Oct  1 2016
# command line args: 
#vendor NVIDIA Corporation
#version 3.4.0.1 COP Build Date Oct  1 2016
#profile gp5fp
#program main
#semantic injectionSwitch
#var float2 injectionSwitch :  : c[0] : -1 : 1
PARAM c[1] = { program.local[0] };
TEMP R0;
TEMP RC, HC;
SGT.F R0.y, c[0].x, {1, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
MOV.U R0.x, {1, 0, 0, 0};
IF    NE.x;
MOV.U R0.x, {0, 0, 0, 0};
ENDIF;
MOV.U.CC RC.x, R0;
IF    NE.x;
SGT.F R0.y, {1, 0, 0, 0}.x, c[0];
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
SGT.F R0.y, c[0].x, {1, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
MOV.U R0.x, {0, 0, 0, 0};
ENDIF;
ENDIF;
MOV.U.CC RC.x, R0;
IF    NE.x;
SGT.F R0.y, {1, 0, 0, 0}.x, c[0];
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
MOV.U R0.x, {0, 0, 0, 0};
ENDIF;
MOV.U.CC RC.x, R0;
IF    NE.x;
SLT.F R0.y, c[0].x, {1, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
MOV.U R0.y, {0, 0, 0, 0}.x;
ELSE;
MOV.U R0.y, {1, 0, 0, 0}.x;
ENDIF;
MOV.U.CC RC.x, R0.y;
IF    NE.x;
MOV.U R0.x, {0, 0, 0, 0};
ENDIF;
MOV.U.CC RC.x, R0;
IF    NE.x;
SGT.F R0.y, c[0].x, {1, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
SGT.F R0.y, {1, 0, 0, 0}.x, c[0];
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
MOV.U R0.x, {0, 0, 0, 0};
ENDIF;
ENDIF;
MOV.U.CC RC.x, R0;
IF    NE.x;
SGT.F R0.y, c[0].x, {1, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
MOV.U R0.x, {0, 0, 0, 0};
ENDIF;
MOV.U.CC RC.x, R0;
IF    NE.x;
SGT.F R0.y, c[0].x, {1, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
SGT.F R0.y, c[0].x, {1, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
MOV.U R0.x, {0, 0, 0, 0};
ENDIF;
ENDIF;
MOV.U.CC RC.x, R0;
IF    NE.x;
SGT.F R0.y, c[0].x, {1, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
SGT.F R0.y, c[0].x, {1, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
MOV.U R0.x, {0, 0, 0, 0};
ENDIF;
ENDIF;
MOV.U.CC RC.x, R0;
IF    NE.x;
SGT.F R0.y, c[0].x, {1, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
MOV.U R0.x, {0, 0, 0, 0};
ENDIF;
MOV.U.CC RC.x, R0;
IF    NE.x;
SGT.F R0.y, c[0].x, {1, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
MOV.U R0.x, {0, 0, 0, 0};
ENDIF;
MOV.U.CC RC.x, R0;
IF    NE.x;
SGT.F R0.y, {1, 0, 0, 0}.x, c[0];
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
MOV.U R0.x, {0, 0, 0, 0};
ENDIF;
MOV.U.CC RC.x, R0;
IF    NE.x;
SGT.F R0.y, {1, 0, 0, 0}.x, c[0];
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
MOV.U R0.x, {0, 0, 0, 0};
ENDIF;
MOV.U.CC RC.x, R0;
IF    NE.x;
SGT.F R0.y, {1, 0, 0, 0}.x, c[0];
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
MOV.U R0.x, {0, 0, 0, 0};
ENDIF;
MOV.U.CC RC.x, R0;
IF    NE.x;
SGT.F R0.y, c[0].x, {1, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
MOV.U R0.x, {0, 0, 0, 0};
ENDIF;
MOV.U.CC RC.x, R0;
IF    NE.x;
SGT.F R0.y, c[0].x, {1, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
MOV.U R0.x, {0, 0, 0, 0};
ENDIF;
MOV.U.CC RC.x, R0;
IF    NE.x;
SGT.F R0.y, {1, 0, 0, 0}.x, c[0];
TRUNC.U.CC HC.x, R0.y;
MOV.U R0.x, {1, 0, 0, 0};
IF    NE.x;
MOV.U R0.x, {0, 0, 0, 0};
ENDIF;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
REP.S ;
SEQ.U.CC HC.x, {1, 0, 0, 0}, {0, 0, 0, 0};
BRK   (NE.x);
SGT.F R0.y, {1, 0, 0, 0}.x, c[0];
TRUNC.U.CC HC.x, R0.y;
MOV.F R0.x, {0, 0, 0, 0};
IF    NE.x;
MOV.F R0.x, {1, 0, 0, 0};
ENDIF;
SEQ.F R0.y, R0.x, {0, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
SEQ.F R0.x, R0, {0, 0, 0, 0};
TRUNC.U.CC HC.x, R0;
IF    NE.x;
SGT.F R0.y, c[0].x, {1, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
MOV.U R0.x, {1, 0, 0, 0};
IF    NE.x;
SGT.F R0.y, c[0].x, {1, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
MOV.U R0.x, {0, 0, 0, 0};
ENDIF;
ENDIF;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
REP.S ;
SEQ.U.CC HC.x, R0, {0, 0, 0, 0};
BRK   (NE.x);
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
REP.S ;
SEQ.U.CC HC.x, {1, 0, 0, 0}, {0, 0, 0, 0};
BRK   (NE.x);
ENDREP;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
SGT.F R0.y, c[0].x, {1, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
ENDIF;
SEQ.F R0.y, {0, 0, 0, 0}.x, {0, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
SGT.F R0.y, c[0].x, {1, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
ENDIF;
SEQ.F R0.y, {0, 0, 0, 0}.x, {0, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
SGT.F R0.z, c[0].x, {1, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.z;
MOV.F R0.y, {0, 0, 0, 0}.x;
IF    NE.x;
MOV.F R0.y, {1, 0, 0, 0}.x;
ENDIF;
SEQ.F R0.y, R0, {0, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
SGT.F R0.y, {1, 0, 0, 0}.x, c[0];
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
ENDIF;
SEQ.F R0.y, {0, 0, 0, 0}.x, {0, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.y;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
REP.S ;
SEQ.U.CC HC.x, {1, 0, 0, 0}, {0, 0, 0, 0};
BRK   (NE.x);
ENDREP;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
MOV.U.CC RC.x, R0;
IF    NE.x;
SGT.F R0.z, {1, 0, 0, 0}.x, c[0].y;
TRUNC.U.CC HC.x, R0.z;
MOV.U R0.y, {1, 0, 0, 0}.x;
IF    NE.x;
MOV.U R0.y, {0, 0, 0, 0}.x;
ENDIF;
MOV.U.CC RC.x, R0.y;
IF    NE.x;
MOV.U.CC RC.x, R0.y;
IF    NE.x;
MOV.U.CC RC.x, R0.y;
IF    NE.x;
MOV.U.CC RC.x, R0.y;
IF    NE.x;
MOV.U.CC RC.x, R0.y;
IF    NE.x;
MOV.U.CC RC.x, R0.y;
IF    NE.x;
SLT.F R0.z, {1, 0, 0, 0}.x, c[0].y;
TRUNC.U.CC HC.x, R0.z;
IF    NE.x;
SGT.F R0.z, {1, 0, 0, 0}.x, c[0].y;
TRUNC.U.CC HC.x, R0.z;
IF    NE.x;
MOV.U R0.y, {0, 0, 0, 0}.x;
ENDIF;
ENDIF;
MOV.U.CC RC.x, R0.y;
IF    NE.x;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDREP;
MOV.U.CC RC.x, R0;
IF    NE.x;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDREP;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
ENDIF;
END
# 370 instructions, 1 R-regs
